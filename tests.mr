@test(0)
  @input
    first

    third
  @output{Line(first)Line()Line(third)}

@test(1)
  @input{@something}
  @output{@something}

@test(2)
  @input
    @a@b@c
  @output
    Line(@a@b@c)

@test(3)
  @input{@a  @b@c}
  @output{Line(@a  @b@c)}

@test(4)
  @input
    @a @b @c
  @output
    Line(@a @b @c)
      
@test(5)
  @input{some text@a @b @c}
  @output
    Line(some text@a @b @c)
  
@test(6)
  @input
    @a@b@c
    @d@e
  @output
    Line(@a@b@c)Line(@d@e)

@test(7)
  @input
    Text outside
    @mycmd(a ,  b ,  c  )
      Text inside
      more text
  @output
    Line(Text outside)@mycmd(a,b,c)`Line(Text inside)Line(more text)`
  
@test(8)
  @input
    @mycmd( a =  3 , b... ,  + +c + + )
      blis blas blus
  @output
    @mycmd(a =  3,b...,+ +c + +)`Line(blis blas blus)`

@test(9)
  @input

    @emptylineatbeginning
  @output 
    Line()@emptylineatbeginning

@test(10)
  @input

    @something
  
      Two empty lines at different levels
  @output
    Line()@something`Line()Line(Two empty lines at different levels)`

@test(11)
  @input

    @main
      @a
      @b
      @c
  @output
    Line()@main`@a@b@c`

@test(11)
  @input

    @main
      @a@b@c
  @output
    Line()@main`Line(@a@b@c)`

@test(12)
  @input

    @main
      a
      b
      c
  @output
    Line()@main`Line(a)Line(b)Line(c)`
  
@test(13)
  @input
    @main
      abc

      def
  @output
    @main`Line(abc)Line()Line(def)`
  
@test(14)
  @input
    @command
      1st
        2nd
      3rd
  @output
    @command`Line(1st)Line(  2nd)Line(3rd)`
      
@test(15)
  @input
    @command
        1st
        2nd
      3rd
  @output
    @command`Line(  1st)Line(  2nd)Line(3rd)`

@test(16)
  @input
    @a{[]}@b[{}]
  @output
    Line(@a{[]}@b[{}])

@test(17)
  @input 
    @a<A>@b<<B>>@c<<<C>>>@d<<<<D>>>>
  @output
    Line(@a<A>@b<<B>>@c<<<C>>>@d<<<<D>>>>)

@test(18)
  @input{@aaa[@bbb<@ccc>]}
  @output
    @aaa[@bbb<@ccc>]

@test(19)
  @input
    @a
      @b
        @c
  @output
    @a`@b`@c``


@test(20)
  @input
    first

    third
  @output
    Line(first)Line()Line(third)

@test(21)
  @input
    @first
      1

    @second
      2

  @output
    @first`Line(1)`Line()@second`Line(2)`

@test(22)
  @input
    @a
      @b
        @c
      @d
        @e
          @f
  @output
    @a`@b`@c`@d`@e`@f```

@test(23)
  @input
    @code
      #include<iostream>
      using namespace std;

      int main() {
        cout << "hi" << endl;
      }
  @output
    @code`Line(#include<iostream>)Line(using namespace std;)Line()Line(int main() {)Line(  cout << "hi" << endl;)Line(})`

@test(24)
  @input
    @a
      1
    @b
      2

    @c
      3

    
    @d
      4

  @output
    @a`Line(1)`@b`Line(2)`Line()@c`Line(3)Line()`Line()@d`Line(4)`

@test(25)
  @input
    @a
      1



    @b

  @output
    @a`Line(1)Line()Line()`Line()@b


@test(25)
  @input
    @a


    @b

  @output
    @aLine()Line()@b

@test(26)
  @input
    @big[@a{1}@b{2}@c@d{@e<3>}]
  @output
    @big[Line(@a{1}@b{2}@c@d{@e<3>})]

@test(27)
  @input{@@}
  @output{Line(@)}

@test(28)
  @input{1@@}
  @output{Line(1@)}
